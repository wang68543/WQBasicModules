# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
setup_travis
default_platform(:ios) 
platform :ios do
#   desc "Description of what the lane does"
# 上传到蒲公英
	  lane :pgy do 
	  wq_app(method: "ad-hoc")
	# UI.success "Successfully finished build_app"
	   pgyer(api_key: "b6d181114edd694008067a8abfa073d2", user_key: "3ca463fa27d0f925a0c8019a2b8201f1")
	  end
	  
	  #打包
	  lane :wq_app do |options|
	  	  
	  	 # cocoapods(clean_install: true, use_bundle_exec: false)

	  	 export_method = options[:method]
	  	 # UI.success "Successfully finished #{export_method} upload_to_app_store "
	  	 #app-store, ad-hoc, package, enterprise, development, developer-id
	  	 build_app( 
	   	  export_method: export_method, 
		  silent: true,
		  clean: true,
		  output_directory: "./archive",
		  export_xcargs: "-allowProvisioningUpdates") 
	   UI.message "Successfully finished build_app"
	  end


	  lane :wq_store do 
	  	# increment_version_number
	  increment_build_number
	  wq_app(method: "app-store")
	  UI.message "Successfully finished build_app"
	  upload_to_app_store
	  UI.success "Successfully finished upload_to_app_store"
	  wq_push(tag: get_version_number())
	  end	 
	 
	 # 提交git 并打tag
	lane :wq_push do |options|
		tagName = options[:tag]
		UI.message("开始提交#{tagName}")
		if git_tag_exists(tag: tagName)
	    UI.message("版本号已经存在 #{tagName} ,即将删除")
	    remove_tag(tag: tagName)
	    end
	   #2. git add . 
		 git_add(path: ".")
	   	 git_commit(path: ".", message: "#{tagName}")
	     push_to_git_remote  
		 add_git_tag(tag: tagName)
		 push_git_tags 
	end


	lane :trunk do |options| 
  	tagName = options[:tag] 
    targetName = "WQBasicModules" 
   #1. pod install 
   	cocoapods(use_bundle_exec: false,
                clean: true,
                podfile: "./Example/Podfile")
   wq_push(tag: tagName)
   spec = "./#{targetName}.podspec"
   UI.message("路径#{spec}")
    #4. pod spec lint 
  if pod_lib_lint(use_bundle_exec: false, allow_warnings: true, verbose: true) #,sources:[spec]
     UI.message("验证已经通过正在上传")
     pod_push(use_bundle_exec: false,
              path: "#{targetName}.podspec",
              allow_warnings: true)  
    else
    UI.message("验证失败") 
   end
   
  end


end
