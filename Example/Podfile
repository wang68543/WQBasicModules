platform :ios, 10.0
#use_modular_headers!
use_frameworks!
install! 'cocoapods', :warn_for_unused_master_specs_repo => false
target 'WQBasicModules_Example' do
#  warn_for_unused_master_specs_repo => false
  
  pod 'WQBasicModules', :path => '../'
  pod 'WQBasicModules/FunModule', :path => '../'

#  pod 'AFNetworking'
  
#  pod 'SwiftLint'
#  pod 'WQBasicModules/Beta', :path => '../'
#  pod 'SnapKit'
#  pod 'SwiftLint', :configuration => 'Debug'
  target 'WQBasicModules_Tests' do
    inherit! :search_paths
#    inhibit_all_warnings!
#    pod 'WQBasicModules', :path => '../'
#    pod 'Quick', '~> 1.2.0', :inhibit_warnings => true
#    pod 'Nimble', '~> 7.0.2', :inhibit_warnings => true
#    pod 'FBSnapshotTestCase' , '~> 2.1.4', :inhibit_warnings => true
#    pod 'Nimble-Snapshots' , '~> 6.3.0', :inhibit_warnings => true
  end
  
#  post_install do |installer|
#    installer.pods_project.targets.each do |target|
#      target.build_configurations.each do |config|
#        macho_type = config.build_settings['MACH_O_TYPE']
#        #if macho_type == 'staticlib'
#          # 将依赖的pod项目的Other C Flags加上’-fsanitize-coverage=func,trace-pc-guard‘选项
#          config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)', '-fsanitize-coverage=func,trace-pc-guard']
#          config.build_settings['OTHER_SWIFT_FLAGS'] ||= ['$(inherited)', '-sanitize-coverage=func','-sanitize=undefined']
#        #end
#      end
#    end
#  end
  
end



